CREATE VIEW CIDADESDUPLICADAS AS
   SELECT CIDADE.IDCIDADE FROM CIDADE 
GROUP BY NOME, UF  HAVING COUNT(1) > 1;

DECLARE
    IDCIDADE  CIDADE.IDCIDADE%TYPE;
    
    CURSOR C_LISTACIDADES IS
    SELECT CIDADE.IDCIDADE FROM CIDADESDUPLICADAS;
    
    CURSOR C_LISTACLIENTES (IDCIDADE IN VARCHAR2) IS
    SELECT CLIENTE.NOME, CIDADE.NOME, CIDADE.UF FROM CIDADE INNER JOIN CLIENTE ON CLIENTE.IDCIDADE = IDCIDADE;

BEGIN
   FOR AUX IN C_LISTACIDADES LOOP
   IDCIDADE := AUX;
   FOR AUX2 IN C_LISTACLIENTES(IDCIDADE) LOOP
   
   DBMS_OUTPUT.PUT_LINE( AUX2.NOME || '-'|| AUX2.NOME || '-'|| AUX2.UF );
   
   END LOOP;
    
   END LOOP;
END;



BEGIN

UPDATE PEDIDO SET VALORPEDIDO = 
  (SELECT SUM(PEDIDOITEM.QUANTIDADE * PEDIDOITEM.PRECOUNITARIO)
  FROM PEDIDOITEM INNER JOIN PEDIDO ON PEDIDOITEM.IDPEDIDO = PEDIDO.IDPEDIDO WHERE PEDIDO.IDPEDIDO = :IDPEDIDO )
  WHERE PEDIDO.IDPEDIDO = :IDPEDIDO;

END;


CREATE VIEW PRODUTOS6MESES AS
SELECT PRODUTO.IDPRODUTO, PRODUTO.NOME FROM PRODUTO WHERE IDPRODUTO NOT IN (SELECT PRODUTO.IDPRODUTO FROM PRODUTO INNER JOIN PEDIDOITEM 
ON PEDIDOITEM.IDPRODUTO = PRODUTO.IDPRODUTO INNER JOIN PEDIDO ON PEDIDO.IDPEDIDO = PEDIDOITEM.IDPEDIDO
WHERE PEDIDO.DATAPEDIDO >= TRUNC(ADD_MONTHS(SYSDATE, -6)));


BEGIN
UPDATE PRODUTO SET SITUACAO = 'I' WHERE IDPRODUTO IN (SELECT IDPRODUTO FROM PRODUTOS6MESES);

EXCEPTION
  WHEN NO_DATA_FOUND THEN 
    DBMS_OUTPUT.PUT_LINE('Produto inexistente!');
  WHEN PROGRAM_ERROR THEN 
    DBMS_OUTPUT.PUT_LINE('Erro interno!');
END;


  